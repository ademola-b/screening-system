# Generated by Django 4.1.4 on 2022-12-21 03:10

from django.db import migrations, models
import django.db.models.deletion
import screening.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FirstScreening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('o_level', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('indigene_certificate', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('pry_certificate', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('ND_result', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('admission_letter', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('acceptance_fee_receipt', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('dateSubmitted', models.DateTimeField(auto_now_add=True)),
                ('dateApproved', models.DateTimeField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('pending for record officer', 'pending for record officer'), ('pending for student affair', 'pending for student affair'), ('Rejected', 'Rejected')], default='Pending', max_length=30)),
                ('comment', models.TextField(max_length=1000)),
                ('student_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='SecondScreening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceptance_form', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('school_fee_receipt', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('medical_receipt', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('entrepreneur_receipt', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('jamb_admission_letter', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('jamb_original_result', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('attestation_letter', models.FileField(upload_to=screening.models.student_directory_path, validators=[screening.models.validate_file_extension])),
                ('dateSubmitted', models.DateTimeField(auto_now_add=True)),
                ('dateApproved', models.DateTimeField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('pending for record officer', 'pending for record officer'), ('pending for student affair', 'pending for student affair'), ('Rejected', 'Rejected')], default='Pending', max_length=30)),
                ('comment', models.TextField(max_length=1000)),
                ('student_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='Screening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstScreening', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='screening.firstscreening')),
                ('secondScreening', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='screening.secondscreening')),
                ('student_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
        ),
    ]
